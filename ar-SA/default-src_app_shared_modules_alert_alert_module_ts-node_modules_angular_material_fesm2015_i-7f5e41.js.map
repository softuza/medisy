{"version":3,"file":"default-src_app_shared_modules_alert_alert_module_ts-node_modules_angular_material_fesm2015_i-7f5e41.js","mappings":"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","sources":["./src/app/shared/modules/alert/alert.module.ts","./src/app/shared/modules/alert/common/alert-type.model.ts","./src/app/shared/modules/alert/components/alert/alert.component.ts","./src/app/shared/modules/alert/components/alert/alert.component.html","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/material/fesm2015/form-field.mjs","./node_modules/@angular/material/fesm2015/input.mjs","./node_modules/@angular/material/fesm2015/progress-spinner.mjs"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { AlertComponent } from \"./components/alert/alert.component\";\n\n@NgModule({\n  declarations: [AlertComponent],\n  imports: [CommonModule],\n  exports: [AlertComponent],\n})\nexport class AlertModule {}\n","/**\n * Alert type\n */\n// eslint-disable-next-line no-shadow\nexport enum AlertType {\n  success,\n  error,\n  info,\n  warning,\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AlertType } from \"../../common/alert-type.model\";\nimport { Alert } from \"../../common/alert.model\";\n\n@Component({\n  selector: \"app-alert\",\n  templateUrl: \"./alert.component.html\",\n  styleUrls: [\"./alert.component.scss\"],\n})\nexport class AlertComponent {\n  message = \"\";\n  className = \"alert-error\";\n\n  @Input()\n  set alert(alert: Alert) {\n    if (!alert) {\n      this.message = \"\";\n      return;\n    }\n    this.show(alert);\n  }\n\n  /**\n   * Show error message\n   */\n  error(message: string): void {\n    this.show({\n      message,\n      type: AlertType.error,\n    });\n  }\n\n  /**\n   * Show success message\n   */\n  success(message: string): void {\n    this.show({\n      message,\n      type: AlertType.success,\n    });\n  }\n\n  /**\n   * Show info message\n   */\n  info(message: string): void {\n    this.show({\n      message,\n      type: AlertType.info,\n    });\n  }\n\n  /**\n   * Show warning message\n   */\n  warning(message: string): void {\n    this.show({\n      message,\n      type: AlertType.warning,\n    });\n  }\n\n  /**\n   * Show alert\n   */\n  show(alert: Alert): void {\n    this.message = alert.message;\n    switch (alert.type) {\n      case AlertType.error:\n        this.className = \"alert-error\";\n        break;\n      case AlertType.success:\n        this.className = \"alert-success\";\n        break;\n      case AlertType.info:\n        this.className = \"alert-info\";\n        break;\n      case AlertType.warning:\n        this.className = \"alert-warning\";\n        break;\n    }\n  }\n}\n","<div class=\"alert\" [ngClass]=\"className\">\n  <div [innerHtml]=\"message\"></div>\n</div>\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: TextFieldModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        this._hideRequiredMarker = false;\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults === null || _defaults === void 0 ? void 0 : _defaults.appearance) || 'legacy';\n        if (_defaults) {\n            this._hideRequiredMarker = Boolean(_defaults.hideRequiredMarker);\n            if (_defaults.color) {\n                this.color = this.defaultColor = _defaults.color;\n            }\n        }\n    }\n    /** The form field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        var _a;\n        const oldValue = this._appearance;\n        this._appearance = value || ((_a = this._defaults) === null || _a === void 0 ? void 0 : _a.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the AbstractControlDirective\n     * should be forwarded to the host element.\n     */\n    _shouldForward(prop) {\n        const control = this._control ? this._control.ngControl : null;\n        return control && control[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        const container = this._connectionContainerRef.nativeElement;\n        const outlineStartSelector = '.mat-form-field-outline-start';\n        const outlineGapSelector = '.mat-form-field-outline-gap';\n        // getBoundingClientRect isn't available on the server.\n        if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n            return;\n        }\n        // If there is no content, set the gap elements to zero.\n        if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n            const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n            for (let i = 0; i < gapElements.length; i++) {\n                gapElements[i].style.width = '0';\n            }\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const startEls = container.querySelectorAll(outlineStartSelector);\n        const gapEls = container.querySelectorAll(outlineGapSelector);\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\", \".mat-input-element{font:inherit;background:rgba(0,0,0,0);color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,0) !important;-webkit-text-fill-color:rgba(0,0,0,0);transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}._mat-animation-noopable .mat-input-element::placeholder{transition:none}._mat-animation-noopable .mat-input-element::-moz-placeholder{transition:none}._mat-animation-noopable .mat-input-element::-webkit-input-placeholder{transition:none}._mat-animation-noopable .mat-input-element:-ms-input-placeholder{transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:rgba(0,0,0,0)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                    }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldModule, imports: [CommonModule, MatCommonModule, ObserversModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        this._iOSKeyupListener = (event) => {\n            const el = event.target;\n            // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n            // indicate different things. If the value is 0, it means that the caret is at the start\n            // of the input, whereas a value of `null` means that the input doesn't support\n            // manipulating the selection range. Inputs that don't support setting the selection range\n            // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n            // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n            if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                // `1, 1` fixes it for the first time that you type text and\n                // then hold delete. Toggling to `1, 1` and then back to\n                // `0, 0` seems to completely fix it.\n                el.setSelectionRange(1, 1);\n                el.setSelectionRange(0, 0);\n            }\n        };\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        if (this._platform.IOS) {\n            this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const formField = this._formField;\n        const placeholder = formField && formField.appearance === 'legacy' && !((_a = formField._hasLabel) === null || _a === void 0 ? void 0 : _a.call(formField))\n            ? null\n            : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule, TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport * as i2 from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, _platform, _document, animationMode, defaults, \n    /**\n     * @deprecated `changeDetectorRef`, `viewportRuler` and `ngZone`\n     * parameters to become required.\n     * @breaking-change 14.0.0\n     */\n    changeDetectorRef, viewportRuler, ngZone) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner') {\n            this.mode = 'indeterminate';\n        }\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n        // Safari has an issue where the circle isn't positioned correctly when the page has a\n        // different zoom level from the default. This handler triggers a recalculation of the\n        // `transform-origin` when the page zoom level changes.\n        // See `_getCircleTransformOrigin` for more info.\n        // @breaking-change 14.0.0 Remove null checks for `_changeDetectorRef`,\n        // `viewportRuler` and `ngZone`.\n        if (_platform.isBrowser && _platform.SAFARI && viewportRuler && changeDetectorRef && ngZone) {\n            this._resizeSubscription = viewportRuler.change(150).subscribe(() => {\n                // When the window is resize while the spinner is in `indeterminate` mode, we\n                // have to mark for check so the transform origin of the circle can be recomputed.\n                if (this.mode === 'indeterminate') {\n                    ngZone.run(() => changeDetectorRef.markForCheck());\n                }\n            });\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        element.classList.add('mat-progress-spinner-indeterminate-animation');\n    }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._getStrokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    /** Gets the `transform-origin` for the inner circle element. */\n    _getCircleTransformOrigin(svg) {\n        var _a;\n        // Safari has an issue where the `transform-origin` doesn't work as expected when the page\n        // has a different zoom level from the default. The problem appears to be that a zoom\n        // is applied on the `svg` node itself. We can work around it by calculating the origin\n        // based on the zoom level. On all other browsers the `currentScale` appears to always be 1.\n        const scale = ((_a = svg.currentScale) !== null && _a !== void 0 ? _a : 1) * 50;\n        return `${scale}% ${scale}%`;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return (INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`));\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.ViewportRuler }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"attr.aria-valuemin\": \"mode === \\\"determinate\\\" ? 0 : null\", \"attr.aria-valuemax\": \"mode === \\\"determinate\\\" ? 100 : null\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-progress-spinner mat-spinner\" }, exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\"], dependencies: [{ kind: \"directive\", type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        // `mat-spinner` is here for backward compatibility.\n                        'class': 'mat-progress-spinner mat-spinner',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                        '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:rgba(0,0,0,0);transition:stroke-dashoffset 225ms linear}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}.mat-progress-spinner[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}.mat-progress-spinner._mat-animation-noopable svg,.mat-progress-spinner._mat-animation-noopable circle{animation:none;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i2.ViewportRuler }, { type: i0.NgZone }];\n    }, propDecorators: { diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner], imports: [MatCommonModule, CommonModule], exports: [MatProgressSpinner, MatCommonModule] });\nMatProgressSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinnerModule, imports: [MatCommonModule, CommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [MatProgressSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Import `MatProgressSpinner` instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 8.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n"],"names":["i1","normalizePassiveListenerOptions","i0","Injectable","EventEmitter","Directive","Output","Optional","Inject","Input","NgModule","coerceElement","coerceNumberProperty","coerceBooleanProperty","EMPTY","Subject","fromEvent","auditTime","takeUntil","DOCUMENT","listenerOptions","passive","AutofillMonitor","constructor","_platform","_ngZone","_monitoredElements","Map","monitor","elementOrRef","isBrowser","element","info","get","subject","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","stopMonitoring","complete","delete","ngOnDestroy","forEach","_info","ɵfac","Platform","NgZone","ɵprov","type","args","providedIn","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","ngOnInit","subscribe","emit","ElementRef","ɵdir","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_document","_textareaElement","nativeElement","minRows","_minRows","value","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","undefined","setAttribute","removeAttribute","_cacheTextareaPlaceholderHeight","minHeight","_cachedLineHeight","style","maxHeight","ngAfterViewInit","_initialHeight","height","window","_getWindow","pipe","_cacheTextareaLineHeight","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","ngDoCheck","force","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","exportAs","host","decorators","TextFieldModule","ɵmod","ɵinj","declarations","exports","i4","ObserversModule","i3","CommonModule","InjectionToken","Attribute","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","ContentChild","ContentChildren","mixinColor","MatCommonModule","merge","startWith","take","trigger","state","transition","animate","ANIMATION_MODULE_TYPE","i2","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","elementRef","id","provide","useExisting","providers","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","MatSuffix","nextUniqueId","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_dir","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_hideRequiredMarker","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","Boolean","hideRequiredMarker","color","defaultColor","_appearance","_a","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","markForCheck","_control","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","onStable","updateOutlineGap","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","ngAfterContentChecked","detectChanges","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","length","errorState","_animateAndLockLabel","_label","ngDevMode","_validateHints","startHint","endHint","hint","ids","userAriaDescribedBy","push","split","find","map","error","setDescribedByIds","labelEl","container","outlineStartSelector","outlineGapSelector","children","textContent","trim","gapElements","querySelectorAll","i","width","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","getBoundingClientRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","abs","rect","right","left","getRootNode","rootNode","documentElement","ChangeDetectorRef","Directionality","ɵcmp","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","animations","inputs","encapsulation","None","changeDetection","OnPush","template","styles","static","_inputContainerRef","descendants","MatFormFieldModule","imports","getSupportedInputTypes","Self","Validators","mixinErrorState","ErrorStateMatcher","i5","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MatInput","inputValueAccessor","ngZone","_formField","_uid","focused","autofilled","_disabled","_type","_readonly","_neverEmptyInputTypes","filter","t","has","_iOSKeyupListener","el","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","disabled","_id","required","_b","_c","_d","_required","hasValidator","_validateType","readonly","ngOnChanges","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","focus","options","_focusChanged","isFocused","_onInput","formField","call","_previousPlaceholder","newValue","indexOf","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","label","join","onContainerClick","_isInlineSelect","size","NgControl","NgForm","FormGroupDirective","name","errorStateMatcher","MatInputModule","_getShadowRoot","Subscription","BASE_SIZE","BASE_STROKE_WIDTH","_MatProgressSpinnerBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","animationMode","defaults","changeDetectorRef","viewportRuler","_diameter","_value","_resizeSubscription","mode","trackedDiameters","_diameters","_spinnerAnimationLabel","_getSpinnerAnimationLabel","head","Set","_noopAnimations","_forceAnimations","strokeWidth","SAFARI","_styleRoot","_attachStyleNode","_strokeWidth","min","unsubscribe","_getCircleRadius","_getViewBox","viewBox","_getStrokeCircumference","PI","_getStrokeDashOffset","_getCircleStrokeWidth","_getCircleTransformOrigin","svg","scale","currentScale","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","createElement","_getAnimationText","strokeCircumference","replace","toString","WeakMap","ViewportRuler","MatProgressSpinnerModule","MatSpinner"],"sourceRoot":"webpack:///"}