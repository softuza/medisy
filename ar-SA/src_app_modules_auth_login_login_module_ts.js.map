{"version":3,"file":"src_app_modules_auth_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKwB;AAIwB;AACwB;AACV;;;;;;;;;;;;;;;ICJxD,6EAAsE;;IAA9B,wEAAe;;;IAEzD,2EAAuE;;;IAA5B,2EAAe;;;IAalD,4EACG;IAAA,mEAAQ;IAAA,4DACV;;;IAcD,4EACG;IAAA,mEAAQ;IAAA,4DACV;;ADrBN,MAAM,cAAc;IAKzB;;OAEG;IACH,YACU,EAAsB,EACtB,KAAY,EACZ,MAAc,EACd,WAAwB;QAHxB,OAAE,GAAF,EAAE,CAAoB;QACtB,UAAK,GAAL,KAAK,CAAO;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAVlC,WAAM,GAAG,IAAI,yCAAO,EAAqB,CAAC;QAC1C,eAAU,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAW/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE;gBACR,iBAAiB;gBACjB,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,4DAAgB,CAAC;aACjE;YACD,QAAQ,EAAE;gBACR,UAAU;gBACV;oBACE,+DAAmB;oBACnB,gEAAoB,CAAC,CAAC,CAAC;oBACvB,gEAAoB,CAAC,GAAG,CAAC;iBAC1B;aACF;SACF,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IACH,KAAK;QACH,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBAChD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,wEAAW,CAAC;YACd,KAAK,EAAE;gBACL,WAAW,EAAE,EAAE;gBACf,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,EAAE;gBAChB,SAAS,EAAE,QAAQ;aACpB;SACF,CAAC,CACH,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,cAAc,KAAU,CAAC;;4EAzDd,cAAc;4GAAd,cAAc,+GAFd,CAAC,kFAAW,CAAC;QCjB1B,yEAA4B;QACrB,iEAAM;QAAA,4DAAM;QACjB,8EAAgC;QAEZ,8HAAY;QAAA,4DAAiB;QAC7C,oFAAmB;QAAA,yPAAmC;QAAA,4DAAoB;QAC1E,qEAA4B;QAC5B,4HAAsE;;QACxE,4DAAkB;QAClB,wHAAuE;;QACvE,oFAAkB;QACS,iJAAe,WAAO,IAAC;QAC9C,0EAAoB;QAGd,uEAKE;QACJ,4DAAQ;QACR,wHAEC;QACH,4DAAiB;QAEnB,0EAAoB;QAGd,wEAME;QACJ,4DAAQ;QACR,wHAEC;QACH,4DAAiB;QAIvB,2EAAoB;QAGhB,uIAAS,WAAO,IAAC;;QAIjB,wEAAM;QAAA,+HAAY;QAAA,4DAAO;QAE3B,2EAAqB;QAChB,kIAAS,oBAAgB,IAAC;QAAC,yJAAkB;QAAA,4DAAI;;QAhDxC,2DAAwB;QAAxB,kJAAwB;QAE5B,0DAAqB;QAArB,8IAAqB;QAEzB,0DAAkB;QAAlB,+EAAkB;QAWN,0DAAiD;QAAjD,iHAAiD;QAgBjD,0DAAiD;QAAjD,iHAAiD;QAWjE,0DAA+B;QAA/B,uJAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDqB;AACT;AACJ;AACS;AACU;AACT;AACE;AACO;AACM;AACjB;AACuB;;AAmBvE,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAfpB,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,qEAAkB;QAClB,kFAAW;QACX,kEAAgB;QAChB,mEAAc;QACd,4EAAkB;QAClB,qEAAe;QACf,kEAAa;QACb,yFAAwB;mIAKf,WAAW,mBAHP,4DAAc,aAZ3B,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,qEAAkB;QAClB,kFAAW;QACX,kEAAgB;QAChB,mEAAc;QACd,4EAAkB;QAClB,qEAAe;QACf,kEAAa;QACb,yFAAwB;;;;;;;;;;;;;;;;;;ACxB2B;AACJ;;;AAEnD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4DAAc,EAAE,CAAC,CAAC;AAM1D,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHnB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY","sources":["./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/login/login.module.ts","./src/app/modules/auth/login/login.routing.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport {\n  Validators,\n  UntypedFormBuilder,\n  UntypedFormGroup,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Store } from \"@ngxs/store\";\nimport { Alert } from \"src/app/shared/modules/alert/common/alert.model\";\nimport { BehaviorSubject, Subject } from \"rxjs\";\nimport { AuthService } from \"src/app/shared/services/auth/auth.service\";\nimport { LoginAction } from \"src/app/store/auth/auth.actions\";\n\n@Component({\n  selector: \"app-auth-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n  providers: [AuthService],\n})\nexport class LoginComponent {\n  form: UntypedFormGroup;\n  alert$ = new Subject<Alert | undefined>();\n  indicator$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Constructor\n   */\n  constructor(\n    private fb: UntypedFormBuilder,\n    private store: Store,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.form = this.fb.group({\n      username: [\n        \"demo@medisy.com\",\n        [Validators.required, Validators.minLength(1), Validators.email],\n      ],\n      password: [\n        \"demodemo\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(255),\n        ],\n      ],\n    });\n  }\n  /**\n   * Login\n   */\n  login(): boolean {\n    if (this.form && !this.form.valid) {\n      Object.keys(this.form.controls).forEach((field) => {\n        const control = this.form.get(field);\n        control?.markAsTouched({ onlySelf: true });\n      });\n      return false;\n    }\n    this.store.dispatch(\n      new LoginAction({\n        token: {\n          accessToken: \"\",\n          expiresIn: 3600,\n          refreshToken: \"\",\n          tokenType: \"Bearer\",\n        },\n      })\n    );\n    this.router.navigate([\"\"]);\n    return true;\n  }\n\n  /**\n   * forgot password\n   */\n  forgotPassword(): void {}\n}\n","<div class=\"content-center\">\n  <div>Medisy</div>\n  <mat-card class=\"login-content\">\n    <mat-card-header>\n      <mat-card-title>تسجيل الدخول</mat-card-title>\n      <mat-card-subtitle>الرجاء ادخال البيانات لتسجيل الدخول</mat-card-subtitle>\n      <span class=\"spacer\"></span>\n      <mat-spinner *ngIf=\"indicator$ | async\" [diameter]=\"18\"></mat-spinner>\n    </mat-card-header>\n    <app-alert *ngIf=\"alert$ | async as alert\" [alert]=\"alert\"></app-alert>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (keyup.enter)=\"login()\">\n        <div fxLayout=\"row\">\n          <mat-form-field fxFlex=\"1 1 100%\">\n            <label>\n              <input\n                autocomplete=\"off\"\n                formControlName=\"username\"\n                matInput\n                placeholder=\"Epost\"\n              />\n            </label>\n            <mat-error *ngIf=\"form.controls.username.hasError('required')\"\n              >required</mat-error\n            >\n          </mat-form-field>\n        </div>\n        <div fxLayout=\"row\">\n          <mat-form-field fxFlex=\"1 1 100%\">\n            <label>\n              <input\n                autocomplete=\"off\"\n                formControlName=\"password\"\n                type=\"password\"\n                matInput\n                placeholder=\"كلمة السر\"\n              />\n            </label>\n            <mat-error *ngIf=\"form.controls.password.hasError('required')\"\n              >required</mat-error\n            >\n          </mat-form-field>\n        </div>\n      </form>\n    </mat-card-content>\n    <div class=\"footer\">\n      <button\n        mat-button\n        (click)=\"login()\"\n        [disabled]=\"indicator$ | async\"\n        class=\"button-submit\"\n      >\n        <span>تسجيل الدخول</span>\n      </button>\n      <div class=\"actions\">\n        <a (click)=\"forgotPassword()\">هل نسيت كلمة السر؟</a>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { LoginRoutingModule } from \"./login.routing.module\";\nimport { LoginComponent } from \"./login.component\";\nimport { CommonModule } from \"@angular/common\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AlertModule } from \"src/app/shared/modules/alert/alert.module\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginRoutingModule,\n    AlertModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n  ],\n  declarations: [LoginComponent],\n  providers: [],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LoginComponent } from \"./login.component\";\n\nconst routes: Routes = [{ path: \"\", component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n"],"names":[],"sourceRoot":"webpack:///"}