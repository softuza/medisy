{"version":3,"file":"src_app_modules_analysis-management_analysis-types_analysis-types_module_ts.js","mappings":"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","sources":["./src/app/modules/analysis-management/analysis-types/analysis-types.component.ts","./src/app/modules/analysis-management/analysis-types/analysis-types.component.html","./src/app/modules/analysis-management/analysis-types/analysis-types.module.ts","./src/app/modules/analysis-management/analysis-types/analysis-types.routing.module.ts","./src/app/modules/analysis-management/analysis-types/components/analysis-type/delete/analysis-type-delete.component.ts","./src/app/modules/analysis-management/analysis-types/components/analysis-type/delete/analysis-type-delete.component.html","./src/app/modules/analysis-management/analysis-types/components/create/create.component.ts","./src/app/modules/analysis-management/analysis-types/components/create/create.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { take } from \"rxjs/operators\";\nimport { indicate } from \"src/app/shared/operators/operators\";\nimport { TableComponent } from \"src/app/shared/components/table.component\";\nimport { AnalysisType } from \"src/app/shared/models/analysis-management/analysis-type.model\";\nimport { CreateComponent } from \"./components/create/create.component\";\nimport { AnalysisTypeDeleteComponent } from \"./components/analysis-type/delete/analysis-type-delete.component\";\nimport { AnalysisTypeService } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.service\";\nimport { GetAnalysisTypesRequest } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.input\";\n\n@Component({\n  selector: \"app-analysis-types\",\n  templateUrl: \"./analysis-types.component.html\",\n  styleUrls: [\"analysis-types.component.scss\"],\n})\nexport class AnalysisTypesComponent extends TableComponent<AnalysisType> {\n  displayedColumns = [\"Name\", \"menu\"];\n\n  /**\n   * Constructor\n   * @param dialog\n   * @param analysisTypeService\n   */\n  constructor(\n    private dialog: MatDialog,\n    private analysisTypeService: AnalysisTypeService\n  ) {\n    super();\n    this.get();\n  }\n\n  /**\n   * Open create component\n   */\n  openCreateComponent(): void {\n    const ref = this.dialog.open(CreateComponent, {\n      autoFocus: true,\n      width: \"480px\",\n    });\n    ref\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.add(res);\n        }\n      });\n  }\n\n  /**\n   * Open AnalysisType delete component\n   */\n  openAnalysisTypeDeleteComponent(item: AnalysisType): void {\n    const ref = this.dialog.open(AnalysisTypeDeleteComponent, {\n      autoFocus: true,\n      width: \"480px\",\n      data: item.id,\n    });\n    ref\n      .afterClosed()\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.delete(res);\n        }\n      });\n  }\n\n  /**\n   * Get\n   */\n  get(): void {\n    const input: GetAnalysisTypesRequest = {\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      sortBy: this.sortBy,\n      sortDescending: this.sortDescending,\n      name: this.filterValue,\n    };\n\n    this.analysisTypeService\n      .getAnalysisTypes(input)\n      .pipe(indicate(this.indicator$))\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.set(res.count, res.items);\n      });\n  }\n}\n","<div>\n  <div class=\"header-basic\">\n    <span class=\"title\">انماط التحاليل</span>\n    <span class=\"spacer\"></span>\n    <button (click)=\"search = true\" mat-icon-button>\n      <mat-icon>search</mat-icon>\n    </button>\n\n    <button [matMenuTriggerFor]=\"menu\" mat-icon-button>\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"openCreateComponent()\">\n        <mat-icon>add</mat-icon>\n        <span>إضافة</span>\n      </button>\n    </mat-menu>\n\n    <app-search-bar\n      (changed)=\"onSearch($event)\"\n      (closed)=\"onSearchClose()\"\n      [visible]=\"search\"\n    ></app-search-bar>\n  </div>\n\n  <app-table-selection [visible]=\"selection.hasValue()\">\n    <span>{{ selection.selected.length }} selected</span>\n    <span class=\"spacer\"></span>\n  </app-table-selection>\n  <mat-table\n    [dataSource]=\"dataSource\"\n    multiTemplateDataRows\n    matSort\n    matSortActive=\"{{ sortBy }}\"\n    matSortDisableClear\n    matSortDirection=\"desc\"\n    (matSortChange)=\"onSort($event.active, $event.direction)\"\n  >\n    <ng-container matColumnDef=\"select\">\n      <mat-header-cell *matHeaderCellDef class=\"table-column-small\">\n        <mat-checkbox\n          (change)=\"$event ? masterToggle() : null\"\n          [checked]=\"selection.hasValue() && isAllSelected()\"\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n        >\n        </mat-checkbox>\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" class=\"table-column-small\">\n        <mat-checkbox\n          (click)=\"$event.stopPropagation()\"\n          (change)=\"$event ? selection.toggle(row) : null\"\n          [checked]=\"selection.isSelected(row)\"\n        >\n        </mat-checkbox>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"expandedDetail\">\n      <mat-cell\n        *matCellDef=\"let element\"\n        [attr.colspan]=\"displayedColumns.length\"\n      >\n        <div\n          [@detailExpand]=\"\n            element === expandedElement ? 'expanded' : 'collapsed'\n          \"\n        >\n          <div>\n            {{ element.description }}\n          </div>\n        </div>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> #</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>\n        الاسم</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let element\">\n        <div class=\"table-cell-stacked\">\n          <div>\n            <strong> {{ element.name }} </strong>\n          </div>\n        </div>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"menu\">\n      <mat-header-cell\n        *matHeaderCellDef\n        class=\"table-column-small\"\n      ></mat-header-cell>\n      <mat-cell\n        *matCellDef=\"let element\"\n        class=\"table-column-small table-column-end\"\n      >\n        <button\n          mat-icon-button\n          (click)=\"\n            expandedElement = expandedElement === element ? null : element\n          \"\n          *ngIf=\"false\"\n        >\n          <mat-icon>{{\n            expandedElement === element ? \"expand_less\" : \"expand_more\"\n          }}</mat-icon>\n        </button>\n        <button [matMenuTriggerFor]=\"itemMenu\" mat-icon-button>\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #itemMenu=\"matMenu\">\n          <button\n            (click)=\"openAnalysisTypeDeleteComponent(element)\"\n            mat-menu-item\n          >\n            <mat-icon color=\"warn\">delete</mat-icon>\n            <span>حذف</span>\n          </button>\n        </mat-menu>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row\n      *matHeaderRowDef=\"displayedColumns; sticky: true\"\n    ></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n  </mat-table>\n  <app-table-state\n    *ngIf=\"count === 0\"\n    [loading]=\"indicator$ | async\"\n  ></app-table-state>\n  <mat-paginator\n    [length]=\"count\"\n    *ngIf=\"count > 0\"\n    [pageSize]=\"pageSize\"\n    [pageSizeOptions]=\"[10, 25, 50, 100]\"\n    (page)=\"onPageChange($event.pageIndex, $event.pageSize)\"\n    showFirstLastButtons\n  ></mat-paginator>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { AlertModule } from \"src/app/shared/modules/alert/alert.module\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { TableModule } from \"src/app/shared/modules/table/table.module\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { MatStepperModule } from \"@angular/material/stepper\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { AnalysisTypesRoutingModule } from \"./analysis-types.routing.module\";\nimport { AnalysisTypesComponent } from \"./analysis-types.component\";\nimport { CreateComponent } from \"./components/create/create.component\";\nimport { AnalysisTypeDeleteComponent } from \"./components/analysis-type/delete/analysis-type-delete.component\";\nimport { AnalysisTypeService } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.service\";\nimport { SearchBarModule } from \"src/app/shared/modules/search-bar/search-bar.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AnalysisTypesRoutingModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatInputModule,\n    TableModule,\n    SearchBarModule,\n    AlertModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatListModule,\n    MatSortModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n  ],\n  declarations: [\n    AnalysisTypesComponent,\n    CreateComponent,\n    AnalysisTypeDeleteComponent,\n  ],\n  providers: [AnalysisTypeService],\n})\nexport class AnalysisTypesModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AnalysisTypesComponent } from \"./analysis-types.component\";\n\nconst routes: Routes = [{ path: \"\", component: AnalysisTypesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AnalysisTypesRoutingModule {}\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { DialogComponent } from \"src/app/shared/components/dialog.component\";\nimport { FormGroup } from \"@angular/forms\";\nimport { indicate, handleError } from \"src/app/shared/operators/operators\";\nimport { take } from \"rxjs/operators\";\nimport { AnalysisTypeService } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.service\";\n\n@Component({\n  selector: \"app-analysis-types-analysis-type-delete\",\n  templateUrl: \"./analysis-type-delete.component.html\",\n})\nexport class AnalysisTypeDeleteComponent extends DialogComponent<\n  AnalysisTypeDeleteComponent,\n  string\n> {\n  constructor(\n    private analysisTypeService: AnalysisTypeService,\n    private dialog: MatDialogRef<AnalysisTypeDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: string\n  ) {\n    super(dialog, new FormGroup({}));\n  }\n\n  /**\n   * Submit\n   */\n  override handleSubmit(): void {\n    this.analysisTypeService\n      .deleteAnalysisType(this.data)\n      .pipe(indicate(this.indicator$))\n      .pipe(handleError(this.alert$))\n      .pipe(take(1))\n      .subscribe(() => {\n        this.close(this.data);\n      });\n  }\n}\n","<h2 mat-dialog-title>Delete</h2>\n<app-alert *ngIf=\"alert$ | async as alert\" [alert]=\"alert\"></app-alert>\n<mat-dialog-content>\n  <p i18n>Are you sure to delete the selected element?</p>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mat-dialog-actions-end\">\n  <button (click)=\"close()\" mat-button i18n>Close</button>\n  <button\n    mat-raised-button\n    color=\"warn\"\n    (click)=\"submit()\"\n    [disabled]=\"indicator$ | async\"\n    i18n\n  >\n    Delete\n  </button>\n</mat-dialog-actions>\n","import { Component } from \"@angular/core\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { DialogComponent } from \"src/app/shared/components/dialog.component\";\nimport { handleError, indicate } from \"src/app/shared/operators/operators\";\nimport { map, take } from \"rxjs/operators\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { TestTypeService } from \"src/app/shared/services/analysis-management/test-type/test-type.service\";\nimport { AnalysisType } from \"src/app/shared/models/analysis-management/analysis-type.model\";\nimport { TestType } from \"src/app/shared/models/analysis-management/test-type.model\";\nimport { AnalysisTypeService } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.service\";\nimport { CreateAnalysisTypeRequest } from \"src/app/shared/services/analysis-management/analysis-type/analysis-type.input\";\n\n@Component({\n  selector: \"app-analysis-types-create\",\n  templateUrl: \"./create.component.html\",\n  providers: [TestTypeService],\n})\nexport class CreateComponent extends DialogComponent<\n  CreateComponent,\n  AnalysisType\n> {\n  testTypes$: Observable<TestType[] | null> | null = null;\n\n  constructor(\n    private analysisTypeService: AnalysisTypeService,\n    private testTypeService: TestTypeService,\n    private fb: FormBuilder,\n    private dialog: MatDialogRef<CreateComponent>\n  ) {\n    super(\n      dialog,\n      fb.group({\n        name: [\"\", [Validators.required, Validators.minLength(1)]],\n        description: [null, []],\n        testTypes: [null, []],\n      })\n    );\n    this.getTestTypes();\n  }\n\n  /**\n   * Get test types\n   */\n  getTestTypes(): void {\n    this.testTypes$ = this.testTypeService\n      .getTestTypes({\n        pageIndex: 1,\n        pageSize: 50,\n        sortBy: \"Name\",\n        sortDescending: false,\n      })\n      .pipe(map((x) => x.items));\n  }\n\n  /**\n   * Submit\n   */\n  override handleSubmit(): void {\n    const input: CreateAnalysisTypeRequest = {\n      name: this.form.value.name,\n      description: this.form.value.description,\n      testTypes: this.form.value.testTypes,\n    };\n    this.analysisTypeService\n      .createAnalysisType(input)\n      .pipe(indicate(this.indicator$))\n      .pipe(handleError(this.alert$))\n      .pipe(take(1))\n      .subscribe((res) => {\n        this.close(res);\n      });\n  }\n}\n","<h2 mat-dialog-title>إنشاء</h2>\n<app-alert *ngIf=\"alert$ | async as alert\" [alert]=\"alert\"></app-alert>\n<mat-dialog-content>\n  <form [formGroup]=\"form\">\n    <div fxLayout=\"row\">\n      <mat-form-field fxFlex=\"1 1 100%\">\n        <label>\n          <input\n            autocomplete=\"off\"\n            formControlName=\"description\"\n            matInput\n            placeholder=\"الوصف\"\n          />\n        </label>\n        <mat-error *ngIf=\"form.controls.description.hasError('required')\"\n          >required</mat-error\n        >\n      </mat-form-field>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mat-dialog-actions-end\">\n  <button (click)=\"close()\" mat-button>Close</button>\n  <button\n    (click)=\"submit()\"\n    mat-flat-button\n    color=\"primary\"\n    [disabled]=\"indicator$ | async\"\n  >\n    Save\n  </button>\n</mat-dialog-actions>\n"],"names":[],"sourceRoot":"webpack:///"}